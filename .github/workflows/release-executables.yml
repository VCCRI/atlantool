# This is a basic workflow to help you get started with Actions

name: Release executables

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Upload release artifact
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 11 ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 20.1.0
          native-image: true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Build project
        run: mvn -B clean package

      - name: Build native image
        id: build-native-image
        run: |
          cp ./bam-cmd/target/classes/META-INF/native-image/picocli-generated/reflect-config.json .
          native-image -jar ./bam-cmd/target/atlantool.jar

      - name: Compute variables
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.vars.outputs.sha_short }}
          release_name: Release ${{ steps.vars.outputs.sha_short }}
          draft: false
          prerelease: false

      - name: Upload JAR file
        id: upload-jar-file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bam-cmd/target/atlantool.jar
          asset_name: atlantool.jar
          asset_content_type: application/jar

      - name: Upload native image
        id: upload-native-image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./atlantool
          asset_name: atlantool-linux-x64
          asset_content_type: application/octet-stream
